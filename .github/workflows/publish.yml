name: Publish

on:
  push:
    branches: [rb-ci-package-discovery]

jobs:
  get-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get_packages.outputs.packages }}
    steps:
      - name: "Get Packages"
        id: get_packages
        run: echo "packages=$(ls -m)" >> "$GITHUB_OUTPUT"

  display-packages:
    runs-on: ubuntu-latest
    needs: get-packages
    steps:
    - name: Display Packages
      run: echo "Packages ${{ needs.get-packages.outputs.packages }}"

  npm-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [
          community,
          core-ui,
          react-odometer,
          scripts,
          themes,
          utils,
        ]
    steps:
      - uses: actions/checkout@v3.5.0
      - run: yarn install
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      # We check if `rollup.config.mjs` exists, which determines if the package is being built or
      # not. This is used further down to determine which folder to publish the package from.
      - name: "Check If Build"
        id: check_if_build
        uses: andstor/file-existence-action@v2
        with:
          files: "./packages/${{ matrix.package }}/rollup.config.mjs"
      
      # Build the package if needed.
      - name: Build
        if: steps.check_if_build.outputs.files_exists == 'true'
        run: yarn build
        working-directory: "packages/${{ matrix.package }}"
      
      # Check whether a package build is a new version.
      - name: Check New Version Build
        if: steps.check_if_build.outputs.files_exists == 'true'
        id: check_new_version_build
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/${{ matrix.package }}/dist"

      # Check whether a package is a new version.
      - name: Check New Version
        if: steps.check_if_build.outputs.files_exists == 'false'
        id: check_new_version
        uses: PostHog/check-package-version@v2
        with:
          path: "./packages/${{ matrix.package }}"
      
      # Publish a package build from `dist` folder.
      # Only runs if new package build is ready to be published.
      - name: Publish Package Build
        if: ${{ (steps.check_if_build.outputs.files_exists == 'true') && (steps.check_new_version_build.outputs.is-new-version == 'true') }}
        run: echo " BUILD {{ matrix.package }} IS READY TO PUBLISH."

        # run: npm publish
        # working-directory: "packages/${{ matrix.package }}/dist"
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish a package build top-level package folder.
      # Only runs if New package is ready to be published.
      - name: Publish Package
        if: ${{ (steps.check_if_build.outputs.files_exists == 'false') && (steps.check_new_version.outputs.is-new-version == 'true') }}
        run: echo "PACKAGE {{ matrix.package }} IS READY TO PUBLISH."
        # run: npm publish
        # working-directory: "packages/${{ matrix.package }}"
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}