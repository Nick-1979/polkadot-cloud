/* @license Copyright 2023 @paritytech/polkadot-cloud authors & contributors
SPDX-License-Identifier: GPL-3.0-only */

:root {
  --size: 120;
  --coefficient: 1px;
  --timeline: 2.6s;
  --delay: 0.65s;
  --rotation-y: -24;
  --rotation-x: 28;
}

// Cube styling
*,
*::after,
*::before {
  box-sizing: border-box;
  transform-style: preserve-3d;
}

.stage {
  transform-origin: 50% 50%;
  animation: scale var(--timeline) var(--delay) infinite linear;
  display: grid;
  place-items: center;
  font-family: "Google Sans", sans-serif, system-ui;
}

.scene {
  position: relative;
  transform: translate3d(0, 0, 100vmin)
    rotateX(calc(var(--rotation-y, 0) * 1deg))
    rotateY(calc(var(--rotation-x, 0) * 1deg)) rotateX(0deg);
}

@keyframes scale {
  0%,
  10% {
    transform: scaleX(1) scaleY(1);
  }

  35%,
  100% {
    transform: scaleX(0.5) scaleY(0.5);
  }
}

.shadow {
  width: calc(var(--size) * var(--coefficient));
  position: absolute;
  bottom: 0;
  aspect-ratio: 1;
  transform-origin: 50% 50%;
  transform: rotateX(90deg)
    translate3d(0, 0, calc((var(--size) * (var(--coefficient) * -0.5)) - 1px))
    scale(0.96);
  animation:
    squish-squosh var(--timeline) var(--delay) infinite,
    fade var(--timeline) var(--delay) infinite;
  background: black;
}

.loader {
  --depth: var(--size);
  --color: var(--network-color-primary);

  width: calc(var(--depth) * var(--coefficient));
  aspect-ratio: 1;
  transform-origin: 50% 50%;
  animation: squish-squosh var(--timeline) var(--delay) infinite;
}

.spinner {
  animation: spin var(--timeline) var(--delay) infinite;
}

.jumper {
  animation: jump var(--timeline) var(--delay) infinite;
}

@keyframes squish-squosh {
  0%,
  50%,
  60% {
    scale: 1 1 1;
  }

  10%,
  35% {
    scale: 1.2 0.8 1.2;
  }

  25% {
    scale: 0.8 1.2 0.8;
  }

  70% {
    scale: 1 1 2;
  }

  80% {
    scale: 2 1 2;
  }

  90%,
  100% {
    scale: 2 2 2;
  }
}

@keyframes fade {
  0%,
  10%,
  40%,
  50%,
  60%,
  100% {
    opacity: 1;
  }

  25% {
    opacity: 0.5;
  }
}

@keyframes spin {
  0%,
  10% {
    rotate: 0deg;
  }

  30%,
  100% {
    rotate: -360deg;
  }
}

@keyframes jump {
  0%,
  10%,
  35%,
  50% {
    translate: 0 0;
  }

  25% {
    translate: 0 -150%;
  }
}

/* Cuboid boilerplate code */
.cuboid {
  width: 100%;
  height: 100%;
  position: relative;
}

.cuboid-side {
  background: var(--color);
  position: absolute;
}

.cuboid-side:nth-of-type(1) {
  --b: 1.1;

  height: calc(var(--depth, 20) * var(--coefficient));
  width: 100%;
  top: 0;
  transform: translate(0, -50%) rotateX(90deg);
}

.cuboid-side:nth-of-type(2) {
  --b: 0.9;
  --color: var(--text-color-tertiary);

  height: 100%;
  width: calc(var(--depth, 20) * var(--coefficient));
  top: 50%;
  right: 0;
  transform: translate(50%, -50%) rotateY(90deg);
}

.cuboid-side:nth-of-type(3) {
  --b: 1;

  width: 100%;
  height: calc(var(--depth, 20) * var(--coefficient));
  bottom: 0;
  transform: translate(0%, 50%) rotateX(90deg);
}

.cuboid-side:nth-of-type(4) {
  --b: 1;
  --color: var(--text-color-tertiary);

  height: 100%;
  width: calc(var(--depth, 20) * var(--coefficient));
  left: 0;
  top: 50%;
  transform: translate(-50%, -50%) rotateY(90deg);
}

.cuboid-side:nth-of-type(5) {
  --b: 1;
  --color: var(--text-color-secondary);

  height: 100%;
  width: 100%;
  transform: translate3d(
    0,
    0,
    calc(var(--depth, 20) * (var(--coefficient) * 0.5))
  );
  top: 0;
  left: 0;
}

.cuboid-side:nth-of-type(6) {
  --b: 1.2;

  height: 100%;
  width: 100%;
  transform: translate3d(
      0,
      0,
      calc(var(--depth, 20) * (var(--coefficient) * -0.5))
    )
    rotateY(180deg);
  top: 0;
  left: 0;
}

// Line styling
.line-loading {
  width: 80px;
  height: 50px;
  position: relative;

  p {
    top: 0;
    padding: 0;
    margin: 0;
    color: var(--text-color-secondary);
    animation: text 3.5s ease both infinite;
    font-size: 12px;
    letter-spacing: 1px;

    @keyframes text {
      0% {
        letter-spacing: 1px;
        transform: translateX(0);
      }

      40% {
        letter-spacing: 2px;
        transform: translateX(26px);
      }

      80% {
        letter-spacing: 1px;
        transform: translateX(32px);
      }

      90% {
        letter-spacing: 2px;
        transform: translateX(0);
      }

      100% {
        letter-spacing: 1px;
        transform: translateX(0);
      }
    }
  }

  span {
    background-color: var(--text-color-primary);
    border-radius: 50px;
    display: block;
    height: 16px;
    width: 16px;
    bottom: 0;
    position: absolute;
    transform: translateX(64px);
    animation: line-loading 3.5s ease both infinite;

    &::before {
      position: absolute;
      content: "";
      width: 100%;
      height: 100%;
      background-color: var(--network-color-primary);
      border-radius: inherit;
      animation: loading2 3.5s ease both infinite;
    }

    @keyframes line-loading {
      0% {
        width: 16px;
        transform: translateX(0);
      }

      40% {
        width: 100%;
        transform: translateX(0);
      }

      80% {
        width: 16px;
        transform: translateX(64px);
      }

      90% {
        width: 100%;
        transform: translateX(0);
      }

      100% {
        width: 16px;
        transform: translateX(0);
      }
    }

    @keyframes loading2 {
      0% {
        transform: translateX(0);
        width: 16px;
      }

      40% {
        transform: translateX(0%);
        width: 80%;
      }

      80% {
        width: 100%;
        transform: translateX(0);
      }

      90% {
        width: 80%;
        transform: translateX(15px);
      }

      100% {
        transform: translateX(0);
        width: 16px;
      }
    }
  }
}

// Dots styling
.dots-loading {
  $colors: var(--background-default), var(--text-color-primary),
    var(--text-color-secondary), var(--text-color-tertiary),
    var(--network-color-primary);

  display: flex;

  .dot {
    position: relative;
    width: 2em;
    height: 2em;
    margin: 0.8em;
    border-radius: 50%;

    &::before {
      position: absolute;
      content: "";
      width: 100%;
      height: 100%;
      background: inherit;
      border-radius: inherit;
      animation: dot-wave 2s ease-out infinite;
    }

    @for $i from 1 through 5 {
      &:nth-child(#{$i}) {
        background: list.nth($colors, $i);

        &::before {
          animation-delay: $i * 0.2s;
        }
      }
    }
  }
}

@keyframes dot-wave {
  50%,
  75% {
    transform: scale(2.5);
  }

  80%,
  100% {
    opacity: 0;
  }
}
